version: "3"
services:
  nginx:
    image: nginx:1.21
    container_name: nginx
    ports:
      - 80:80
      - 443:443
      - 8081:8080
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/ssl/imm:/etc/nginx/certs:ro
      - ./public:/public:ro
    depends_on:
      - shinyproxy
      - flower
      - grafana

  shinyproxy:
    container_name: shinyproxy
    build: ./shinyproxy
    restart: on-failure
    ports:
      - 8080:8080
      - 9091:9090
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./shinyproxy/application.yml:/opt/shinyproxy/application.yml:ro
      - ./shinyproxy/templates:/opt/shinyproxy/templates:ro
      - shinyproxy-server:/log
      - shinyproxy-containers:/container-logs

  grafana:
    image: grafana/grafana:8.0.6
    container_name: grafana
    restart: always
    user: root
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SERVER_ROOT_URL=http://localhost:3000/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_NAME=Main Org.
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_AUTH_ANONYMOUS_HIDE_VERSION=true

  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - 6379:6379

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ./prometheus:/etc/prometheus:ro
      - prometheus-data:/prometheus
    ports:
      - 9090:9090

  celery-ctrap:
    container_name: celery-ctrap
    build: ./celery
    command: celery -A tasks worker -l info -E -n ctrap
    volumes:
      - ./celery:/celery:ro
      - ../apps/cTRAP/sessions:/data
    depends_on:
      - redis

  flower:
    container_name: flower
    image: mher/flower
    command: celery -A tasks flower --url_prefix=flower
    volumes:
      - ./celery:/celery:ro
    working_dir: /celery
    ports:
      - 5555:5555
    environment:
      CELERY_BROKER_URL: redis://redis
      CELERY_RESULT_BACKEND: redis://redis
    depends_on:
      - celery-ctrap
      - redis

  rstudio-server:
    container_name: rstudio-server
    build: ./rstudio-server
    ports:
      - 8787:8787
    environment:
      - PASSWORD=hello

  db:
    container_name: mysql
    image: mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=test_db
    ports:
      - 3306:3306

networks:
  default:
      name: shiny-net

volumes:
  prometheus-data:
  grafana-data:
  shinyproxy-server:
  shinyproxy-containers:
